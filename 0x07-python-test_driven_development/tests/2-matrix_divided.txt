=======================================
``2-matrix_divided`` module
=======================================

Tests on `matrix_divided` function

	importing module:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Working and error free
=======================
if working correctly, it returns a list of divided item by div
::

instances where the fuction works without errors
::
	>>> matrix = [[3, 4, 5], [6, 7, 8]]
	>>> matrix_divided(matrix, 2)
	[[1.5, 2.0, 2.5], [3.0, 3.5, 4.0]]
	
	>>> matrix_divided(matrix, 200)
	[[0.01, 0.02, 0.03], [0.03, 0.04, 0.04]]

	>>> matrix_divided(matrix, -17.3)
	[[-0.17, -0.23, -0.29], [-0.35, -0.4, -0.46]]

	>>> matrix_divided(matrix, -34)
	[[-0.09, -0.12, -0.15], [-0.18, -0.21, -0.24]]

Errors:
========

	>>> matrix = []
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	 ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[1, 2, 3], [3, 4, 5, 6]]
	>>> matrix_divided(matrix, -4)
	Traceback (most recent call last):
	 ...
	TypeError: Each row of the matrix must have the same size

	>>> matrix = [[12, 3, 4], [13, 14, 3], [7, 8, 9, 10]]
	>>> matrix_divided(matrix, 54)
	Traceback (most recent call last):
	 ...
	TypeError: Each row of the matrix must have the same size

	>>> matrix = [1, 2, 3, [3, 4, 5]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	 ...
	TypeError: object of type 'int' has no len()

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	 ...
	ZeroDivisionError: division by zero

	>>> matrix = [[1, "two", 3, 4], [5, 6, 7, 8]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	 ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
		
